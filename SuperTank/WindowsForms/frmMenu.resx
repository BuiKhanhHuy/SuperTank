<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picMinus.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAADFJREFUaEPt
        zrENADAMwzD//3S7+IMMAQLyAEEBAAAAgKvesm7MtbemGwAAAABwTPIBq5T/AXASnjAAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="picMultiply.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAX1JREFUaEPt
        mMlKA0EURRu3EoeAghNodi78Axd+tOBKVFyIA4K6iBOoX9Kei6+gSCtJd9LpKnkHLjQ1vXup0F2VwnEc
        x3Ecx3FaoSzLfXSGNqxpalhrER2jI2tqH4qdIvGE1q25MazRQ5daELTmgnW1C4XW0IOqwhA13hnmaifO
        tRB8oYF1zQcKrqI7VYdntGldE8Oc0RB71jVfKNw4DGPjEJ+omxABDMRhXtDYMIxRiAtNgO5DBDCiMLdy
        BQqzZV0V6FtCVxoI6YQIYCgO84oqYWhLO0QAYyvo1zA8L6M4xK51pQkGR8Nso7xCBDDaR/dyDW/o+uex
        fEc7NiwPMKyduZF74wPlsRMxmM4/CIbz/2lhtPLmQtm9sf78lvCczTdk7NedtjSPJgEMTXzeoi/pc1at
        EzBj0ji+BzBQO0SAsWmEoXB8S1SI2rdE5iiM7v6ik9uhQjyqOsziqttNGIr9mz8fDpDCTB0iwFoKc4IO
        rclxHMdxHMdxZklRfAMaSAbP41kmewAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAVwgAflYKAH5WCgB+VgoAflYKAH1VCwB+VgoAflYKAH5W
        CgB+VgoAflYKAH5WCgB+VgoAflYKAH5WCgB+VAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAVgoAf1UKAH9VCgB/VQoCf1UKA39U
        CgB/VQoDf1UKBH9VCgR/VQoEf1UKBH9VCgR/VQoCf1UKAH9VCgB/VQoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAVgoAf1UKA39VCgB/VQpqf1UKl35VCgB/VQqBf1UKtH9VCql/VQqrf1UKqH9VCrd/VQpdf1UKAH9V
        CgN/VQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAVgoAf1UKA39VCgB/VQqFf1UKvX9VCgB/VQqif1UK4X9VCtN/VQrWf1UK0n9V
        CuV/VQp0f1UKAH9VCgN/VQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAflUKAH9VCgB/VQoAf1UKAX9VCgN/VQoEf1UKBH9VCgR/VQoEf1UKBH9VCgR/VQoEf1UKBH9V
        CgR/VQoEf1UKBH9VCgR/VQoEf1UKBH9VCgR/VQoEf1UKBH9VCgR/VQoBf1UKAH9VCgR/VQoBf1UKAH9V
        CgAAAAAAf1UKAH9VCgB/VQoCf1UKBH9VCgR/VQoDf1UKAH9VCgB/VQoAf1YLAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB/VQoAf1UKAH9VCgB/VQoCf1UKAn9VCgB/VQoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgVcIAH9VCgB/VQoAf1UKAn9VCgF/VQoAf1UKAH9W
        CQAAAAAAAAAAAAAAAAAAAAAAAAAAAH5VCgB/VQoAf1UKAH9VCgJ/Vg4Af1UKCH9VCk9/VQpuf1UKZn5U
        CWp6TgJqe1ADantQA2p6TwJqfFIHaoBWC2d/VQpqf1UKa4BWC2d9Ugdqek4CantQA2p7UANqek4Can5T
        CGp/VQpnf1UKbH9VCmmAVgtoe1EFanpPAmp7UANqe08DanpPA2p/VAlpf1UKZ39VCm5/VQpBf1UKAX9V
        CgJ/VQoBf1UKAH9VCgB/VQkAAAAAAAAAAAAAAAAAflUKAH9VCgB/VQoAf1UKA39VCgB/VQoaf1UKzn9V
        Cv9/VQr9f1QJ/4FXDf+HXxf/hl0U/4ZdFP+HXxb/g1oR/35UCf9/VQr/f1UK/35UCf+DWhD/h18X/4Zd
        FP+GXRT/h18X/4FYDv9+VAn/f1UK/39VCv9+VAn/hVwT/4deFv+GXRT/hl0U/4dfFv+AVgv/f1UK/39V
        Cv1/VQr/f1UKsH9VCgd+VQwAf1UKAn9VCgB/VQoAf1UJAAAAAAB/VQoAf1UKAH9VCgCBVwsDiV4QAIZc
        DhmAVgvZf1UK939VCj2MZB0HflQImoFXDf/o1avy/O3K+Pfnwvj77Mn0l3Iu/3lOAc6JYRgeiWEZGHpP
        AsORayb/+OnF9PjoxPj668j47dy084VcE/99Ugami2MbCodfFjR3SwDlqIdJ+v/y0Pb15cD4/vDO+NjB
        k/N7UAP/gVcNeqR8PAF/VQpZf1UK/4BWC7aTaBUGUCcAAYFXCwJ/VQoAf1UKAH9WCQB/VQoAf1UKAIFX
        CwOQZRQAi2ERGnxSCNJ8Ugj/gVcLmoJYDACAVgoAjGUeJnZKAPzTu437//vc///z0f/15cH4glgQ/3xS
        BWd4TQAAe1ACAH9UCVh+VAr/7964+P/11P//+dn/3Meb+nhMAP+HXxUzf1UIAG9CAAB3TACPj2kk///0
        0/r9783///7f/r6ibf90RwDms5RXC4BXDQCGXA4AgVYLv3tSCP99VAm0onYdBjAKAAGBVwsCf1UKAH9V
        CgB/VQoAf1UKA4heDwCLYREZdk0F1oxhEf+TaBb/eU8HzrKGKAp+UwYAg1oOXn5TB//m2a/4///k/v77
        2v7/+tn5kmwm/3tPAZ9OGgAAZDUAAHxRA5GMZR3/+/TS+P/83P7//+H+7eO8+IJYDf+BVgpseE0AAO3Z
        oQV4TADBoYBA////5fr8+Nf+///o/tTBkvt6TQD8imEXPYNYCwCTaBUfeVAH6JpuGfqFWg3/eE8Gt6J3
        HgZTKwABf1UKAn9VCgB/VQoCf1UKAIZcDhh8UgjTi2ER/+2+Sfjdr0D7e1II/3VMBNN4TgaveE4F931U
        Df+igkb5pIRJ+6OCR/unh036iGEd/HdMA/94TgfAeE4GvHdNA/+FXhn8poZM+qOCR/ukg0j7pIRJ+X9X
        EP54TgT6d00GsnlPB812TAL/jmkn+qeHTfqigkb7pYVK+559QPl6UAf/eU8G7XdNBqp0SgTghFoN/+y9
        SPvesEH3g1kM/35UCbOTaBUGflUMAH9VCgF/VQoAf1UKGYBWC9Z8Ugj/kWcV/NmrPvv7zFH/2qw++qR5
        H/2Zbhr/nHAb+5pvGfqTZg77kmUN+5NmDvuSZQ37mGwW+5twG/qZbhn/mW4Z/5twG/qYbRf7kmUN+5Nm
        DvuSZg37kmYN+5puGPqbcBr6mW4Z/5luGf6bcBv5l2sU+5JlDPuTZg77kmUN+5RnD/ubcBr6m28a/Jlu
        Gf+pfiL947VD+/rLUf/NoDf6iV8Q/H1TCf+AVgq2f1UKB39VCgCAVQoDf1UKyX9VCvSBVwuMeVAHw3lQ
        B//XqTz6/MxS//nKUPz4x0n698ZL/ffIUP79zlT8/s9U/P7PVPz+z1X8/M1S/PzMUfz9zlL6/c5T+fzM
        Uvz8zVL8/s9V/P7PVPz+z1T8/s9U/PzNUvz8zVL8/s5T+f3OUvr8zFH8/c1T/P7PVfz+z1T8/s9V/P3O
        VPz8zFL9/M1S+/7OU/n+z1P8/9FU/8aZM/p0SgT/fFIIsoBWC5R/VQr/f1UKon9VCgB/VQpPf1UK/39V
        Cj+DWQwA/9JXBXZMBcqgdR7/+MlP/O6/SP/68Nf/+eCi/+SzOPyQZhb7jWMS/o5jE/2OYxP9jmMT/Y5j
        E/2OYxP9jmMT/Y5jE/2OYxP9jmMT/Y5jE/2OYxP9jmMT/Y5jE/2OYxP9jmMT/Y5jE/2OYxP9jmMT/Y5j
        E/2OYxP9jmMT/Y5jE/2OYxP9jmMT/Y5jE/2NYhL9kGUU+YFXC/9+VAmoWjIAAIFXCwB/VQpnf1UK/39V
        CiR/VQpkf1UK/39VCht/VAoAZTwAAHZNBaubcBr//M1S+/TFTP/96rn//N6R/+y7QP2rgCX8qX0i/qp+
        Iv2pfiL9qX4i/al+Iv2pfiL9qX4i/al+Iv2pfiL9qX4i/al+Iv2pfiL9qX4i/al+Iv2pfiL9qX4i/al+
        Iv2pfiL9qX4i/al+Iv2pfiL9qX4i/al+Iv2pfiL9qX4i/al9Iv2qfiL+qn4i+YRaDf99UwmDe1EIAH9V
        CgB/VQo+f1UK/39VCjR/VQohf1UK+n9VCqx/VQoZg1kMXHhOBveugiX36rxI9+CyQvvisDb747I8++S2
        RfvsvUj77L5J++y+Sfvsvkn77L5J++y+Sfvsvkn77L5J++y+Sfvsvkn77L5J++y+Sfvsvkn77L5J++y+
        Sfvsvkn77L5J++y+Sfvsvkn77L5J++y+Sfvsvkn77L5J++y+Sfvsvkn77L5J++y9SPvqu0f68sNM9Z90
        HPt5TwbohFoNQ39VCiN/VQrOf1UK3n9VCgV/VQoAf1UKWn9VCvt/VQr/f1UK/n9VCv+BVwv/f1UK/oBW
        C/x7Ugr8eU8I+3lPBvt3Tgb7d04G+3dOBvt3Tgb7d04G+3dOBvt3Tgb7d04G+3dOBvt3Tgb7d04F+3dO
        CPt3Tgj7d00F+3ZMBft1TAX7dkwF+3ZMBft2TAX7dkwF+3ZMBft2TAX7dkwF+3ZMBft2TAX7dUsE+3pQ
        B/x+VAr8flQK/4FXC/9/VQr/f1UK/n9VCv9/VQrtf1UKOn9VCgB/VQoCf1UKAH9VChd/VQpIf1UKSX9V
        Ckx9UwlCf1UKfHxTCf++kS730qQ6+s2gN/rOoTj6zqE4+s6hOPrOoTj6zqE4+s6hOPrOoTj6zqE4+s6h
        OPrOoTf6zqE4+s6eL/rOni76zqE4+tWnO/vWqTz61qg8+taoPPrWqDz61qg8+taoPPrWqDz61qg8+tao
        PPrVpzv63K4/+rSHKPp5Twf8gVcLZn1TCUd/VQpMf1UKTH9VCkV/VQoPf1UKAH9VCgF+VQoAf1UKAn9V
        CgB/VQoAf1UKAIBVCgF/VQoAlWoXFnZNBe7DlzH//9JV/vfIT//5ylD/+cpQ//nKUP/5ylD/+cpQ//nK
        UP/5ylD/+cpQ//nKUP/5ylH/+chM//zZfv/92n//+chM/teqPfzQozn+0qQ6/dGkOf3RpDn90aQ5/dGk
        Of3RpDn90aQ5/dGkOf3Qozn92Ko9+6R4H/94TwbT///VAYJXCwCAVgoBf1UKAH9VCgB/VQoBf1UKAn9V
        CgB/VQoAf1UKAH9VCgF/VQoDf1UKA39VCgN/VQoGUioAAHZNBbebbxr/9sdO++2/Sf/vwEr/78BK/+/A
        Sv/vwEr/78BK/+/ASv/vwEr/78BK/+/ASv/vwEz/7rw+//ju0f/58NX/7bs+/IddEflzSgP+eE4G/XdN
        Bf13TQX9d00F/XdNBf13TQX9d00F/XdNBf13TQX9eE4G+XtRCP+AVgqSgVcLAH9VCgd/VQoDf1UKA39V
        CgN/VQoBf1UKAH9VCgAAAAAAAAAAAAAAAAAAAAAAAAAAAH9VCgB/VQoEeU8GAHxSCHGDWQ3/8MFL9v7P
        U/76y1H9+8xR/fvMUf76y1H/+8xR//vMUf/7zFH/+8xR//vMUf/7zFH/+8tQ//zQX//80V//+8tQ//HC
        TP3vwEr978BK/e/ASv3vwEr978BK/e6/Sv3vwEr878BK++6/Svv0xU381qk89n1TCf+BVwtMfFMJAH9V
        CgN/VQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH9VCgB/VQoCf1UKAIJY
        DC98Ugj/p3wh/7mNK/+2iSn/tooq/7eKKv24jCv5tYgp+rSIKfq0iCn6tIgp+rSIKfq0iCn6tYgp+rSH
        Jfq0hyX6tYgp+reLKvu4jCv7uIsr+7iLK/u4iyv7uYwr+ryPLfm6jSz+uY0s/7mMK/++kS7+onYe/3tR
        B+uLYRETf1UKAH9VCgF/VQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH9V
        CgB/VQoBf1UKAHhOBQOAVgq8eE4G5XVLBNx1TAXedUwE23ZMBed3TQX/glgM+4NZDPuCWAz7g1gM+4NY
        DPuDWQz7hFoN+oRaD/qEWw/6hFoN+oNZDPqDWQz6g1kM+oNZDPqEWg36f1UK/HVMBP91SwTkdEsE3XVL
        BN90SgPceU8G64BWC6CDWQwAf1UKAn9VCgB+VQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB/VQoAdkwFAIhdDwB6UAcDzZ82Be6/SQXGmTIHFgAAAJFnFS96UAf9zqE3+f/S
        Vfr4yVD7+spQ+/rLUfv5yVD78sNN/PHAQ/zxwEL88sNN/PLDTPzyw0z88sNM/PDBS/z7y1H6uIsq/3hP
        BuevhCgR5bZEBa2AJAvElzEIsoUnBndNBQS4jSwAd1AIAH5VCwB/VQoBf1UKAH9VCgB/VQoAgFUKAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/VQoAf1UKAH9VCgB/VQoBf1UKAH9VCgB/VQoAhVoOAAAA
        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
        CgB+VQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///+QH/wAA////pAX/AAD///////8AAP///yQF/wAA////JAX/AAD6AAABUF8AAPS/
        ///9LwAA6gAAAAAXAADUAAAAAAsAAKgAAAAABQAAUMAwDAMCAACgQDAIAgEAAEAAAAAAAAAAgAAAAAAB
        AAAAAAAAAAEAABAAAAAAGAAAGAAAAAAYAAAAAAAAAAAAAIAAAAAAAQAAQAAAAAACAACSAAAAAEkAAEEA
        AAAAggAA+QAAAACfAAD5AAAAAL8AAP0AAAABPwAA/QQAAACLAAD9JgAARAAAAP6CAAACjAAA//IAAAAB
        AAD/+gAAoAAAAP/5AACSAAAA//pAAkCBAAD/gCAEtAEAAP6AIAT/0QAA//9QCv6EAAD+gAgl/4EAAP6A
        Cov//wAA///oJ///AAD+gAv///8AAP/ID////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>